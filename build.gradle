// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionCodeApp = versionMajor * 1000 + versionMinor * 1000 + versionPatch * 100

apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
  repositories {
    google()
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.0.1'
  }
}

def isCI = 'true'.equals(System.getenv('CI'))
def preDexEnabled = 'true'.equals(System.getProperty('pre-dex', 'true'))

allprojects {
  ext {
    androidApplicationId = 'com.fernanependocejas.android10.sample.presentation'
    androidVersionCode = versionCodeApp
    androidVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"
    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
    testApplicationId = 'com.fernandocejas.android10.sample.presentation.test'
    isCiEnvironment = isCI
    isPreDexEnabled = preDexEnabled
  }
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
  description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
  description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
  description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
  description 'Run application acceptance tests.'
}

